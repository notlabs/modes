name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - uses: pnpm/action-setup@v4

      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: 20
      #     cache: 'pnpm'

      # - run: pnpm install --frozen-lockfile
      # - uses: nrwl/nx-set-shas@v4

      # # TODO: run tests
      # - run: pnpm exec nx affected -t lint build

      # - run: pnpm exec nx build-storybook web

      # - uses: actions/configure-pages@v4

      # - uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: 'apps/web/storybook-static'

      # - uses: actions/deploy-pages@v4
      #   id: deployment

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    environment: production
    steps:
      - name: Execute deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 300s
          script: |
            set -ex
            source ~/.bashrc
            fnm use 20
            echo "Node version: $(node -v)"
            corepack enable
            corepack prepare pnpm@latest --activate
            cd /opt/modes
            git fetch
            git reset --hard origin/main
            pnpm install
            pnpm nx run-many --target=build --all --output-style=stream
            pnpm prisma db push --schema apps/api/prisma/schema.prisma
            docker-compose down
            docker-compose up -d --build
